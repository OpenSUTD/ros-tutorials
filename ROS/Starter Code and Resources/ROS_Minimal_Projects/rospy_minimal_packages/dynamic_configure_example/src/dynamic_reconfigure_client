#!/usr/bin/env python

import rospy
import dynamic_reconfigure.client

# Optional callback for the config returned by the server
def callback(config):
    rospy.loginfo("Config set to {int_param}, {double_param}, {str_param}, {bool_param}, {size}".format(**config))

if __name__ == "__main__":
    rospy.init_node("dynamic_reconfigure_client")

    # We target the server with the first argument
    client = dynamic_reconfigure.client.Client("dynamic_reconfigure_example", timeout=30, config_callback=callback)

    r = rospy.Rate(0.5)
    x = 0
    b = False
    while not rospy.is_shutdown():
        x = x + 1
        if x > 10:
            x = 0
        b = not b
        client.update_configuration({"int_param": x,
                                     "double_param": (1 / (x + 1)),
                                     "str_param": str(rospy.get_rostime()),
                                     "bool_param": b,
                                     "size": 1})
        r.sleep()
